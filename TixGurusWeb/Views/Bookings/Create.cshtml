@using TixGurusWeb.Models
@model TixGurusWeb.Models.EventSeatBookingModel
@{
    ViewBag.Title = "Create";
}

<h2>Book</h2>
<script type = "text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <h4>Details</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>Event</dt>
            <dd>@Html.DisplayFor(model => model.EventDetails.EventTitle)</dd>
            @Html.HiddenFor(model => model.EventDetails.EventID)
            <dt>Location</dt>
            <dd>@Html.DisplayFor(model => model.EventDetails.EventLocation)</dd>
            <dt>Date</dt>
            <dd>@Html.DisplayFor(model => model.EventDetails.EventDate)</dd>
            <dt>Description</dt>
            <dd>@Html.DisplayFor(model => model.EventDetails.EventDescription)</dd>
            <dt>Ticket Price ($)</dt>
            <dd>@Html.DisplayFor(model => model.EventDetails.BasePrice)</dd>
        </dl>
    </div>

    @if (!Model.EventDetails.EventLocation.ToUpper().Contains("MUSEUM"))
    {
        <div class="form-group">
            <dl class="dl-horizontal">
                <dt>Level</dt>
                <dd>
                    @Html.DropDownListFor(m => m.SelectedLevel, new SelectList(Model.LevelList, "Value", "Text"), "-- Select Level --", new { @class = "form-control" })
                    @Html.HiddenFor(m => m.SelectedLevel, new { id = "Level" })
                    <script type="text/javascript">
                        $("document").ready(function () {
                            $("#SelectedLevel").on("change", function () {
                                var val = $(this).val();
                                document.getElementById("Level").value = val;
                                //$("#SelectedLevel").val($(this).text());
                                var rowList = "";
                                $.ajax({
                                    url: "/Bookings/GetRows",
                                    type: "GET",
                                    data: jQuery.param({ 'level': val }),
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (rows) {
                                        debugger;
                                        //var response = jQuery.parseJSON(rows)
                                        $.each(rows, function (i, data) {
                                            rowList += ('<option value="' + data.Value + '">' + data.Text + '</option>');
                                        });
                                        $("#SelectedRow").html(rowList);
                                        $("#level").html(val);
                                        $("RowList").val(rowList);
                                    },
                                    error: function () {
                                        alert('Failed to load Rows');
                                    }
                                });
                            });
                        });
                    </script>

                </dd>
            </dl>
            <dl class="dl-horizontal">
                @if (Model.RowList != null)
                {
                    <dt>Row</dt>
                    <dd>
                        @Html.DropDownListFor(m => m.SelectedRow, new SelectList(Model.RowList, "Value", "Text"), "-- Select Row -- ", new { @class = "form-control" })
                        @Html.HiddenFor(m => m.SelectedRow, new { id = "Level" })

                    </dd>
                    <dt></dt>
                    <dd>
                       
                    </dd>
                }
            </dl>


        </div>
        <div class="col-md-offset-4 col-md-12">
            <form action="" method="post">
                <input type="submit" name="ShowSeats" value="Show Seats" />
            </form>
        </div>
        <div>
            @if (Model.SelectedLevel != null && Model.SelectedRow != null)
            {
                <h5>Tick in the status column are already booked seats</h5>
                <table class="table table-striped table-bordered" id="Seats">
                    <thead class="bg-dark text-white">
                        <tr>
                            <th>Level</th>
                            <th>Row</th>
                            <th>Seat Number</th>
                            <th>Status</th>
                            <th>Booking action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SeatList)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Seat.SeatLevel)</td>
                                <td>@Html.DisplayFor(modelItem => item.Seat.SeatRow)</td>
                                <td>@Html.DisplayFor(modelItem => item.Seat.SeatNumber)</td>
                                @if (item.Booked)
                                {
                                    <td>@Html.DisplayFor(modelItem => item.Booked)</td>
                                }
                                else
                                {
                                    <td>
                                        @Html.EditorFor(model => item.Booked)
                                    </td>
                                }
                                <td>@Html.ActionLink("Book", "Book", new { eventID = Model.EventDetails.EventID, seatBookingID = item.SeatBookingID, level = Model.SelectedLevel, row = Model.SelectedRow, seatNumber = item.Seat.SeatNumber })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    } else
    {
        <p>
            @Html.ActionLink("Book", "Book", new { eventID = Model.EventDetails.EventID})
        </p>
    }

</div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
